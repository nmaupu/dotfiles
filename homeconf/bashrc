# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
#case "$TERM" in
#xterm-color)
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
#    ;;
#*)
#    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#    ;;
#esac

# Comment in the above and uncomment this below for a color prompt
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
if [ $USER = "root" ]; then
	PS1='$? - \[\033[1;32m\][\033[0m\]\[\033[1;34m\]\w\033[0m\]\[\033[01;32m\]]\033[0m\]\n\[\033[1;31m\]\u\[\033[0m\]@\[\033[0;36m\]\h\[\033[0m\]$ '
else
	PS1='$? - \[\033[1;34m\][\033[0m\]\[\033[1;36m\]\w\033[0m\]\[\033[01;34m\]]\033[0m\]\n\[\033[0;33m\]\u\[\033[0m\]@\[\033[0;33m\]\h\[\033[0m\]$ '
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*|urxvt*)
    export TERM="xterm"
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
    #alias ls='ls --color=auto'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
    alias ll='ls -l'
    alias la='ll -al'
fi

#if [[ $TERM != 'screen' ]] ; then
#    if [[ `screen -list | grep -v "No" | awk '$2 { print }' | wc -l` == 0 ]] ; then
#        screen
#    else
#        screen -dr
#    fi
#fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
#if [ -f /etc/bash_completion ]; then
#    . /etc/bash_completion
#fi

source ~/.bashrc_vars

#RET=`ssh-add -l`
#if [ "${RET}" = "The agent has no identities." ]
#then
  #ssh-add ~/.ssh/*.priv 1>/dev/null 2/dev/null
#fi

export NNTPSERVER=news.free.fr

bash=$BASH_VERSION%.* ; bmajor=$bash%.* ; bminor=$bash#*.
if [ -f /etc/bash_completion ]
then
  . /etc/bash_completion
fi
unset bash bmajor bminor
echo

PATH=/usr/games:${PATH}

### Display a funny cowsay
COWSAY_DIR=/usr/share/cowsay/cows
#COWSAY_FILES="satanic.cow dragon-and-cow.cow moose.cow bud-frogs.cow daemon.cow tux.cow calvin.cow gnu.cow duck.cow milk.cow"
##COWSAY_FILES="sodomized.cow sodomized-sheep.cow head-in.cow"
#COWNB=$(echo ${COWSAY_FILES} | tr -s " " "\n" | wc -l)
#COWRAND=$((${RANDOM}%${COWNB}+1))
#COWFILE=$(echo ${COWSAY_FILES} | cut -d" " -f${COWRAND})
##
#CHUCK_RSS="http://chucknorrisfacts.fr/xml/facts.xml"
#CHUCK_NB=30
#CHUCK_RAND=$((${RANDOM}%${CHUCK_NB}+1))
##
#if [ "x$(cat /tmp/facts.xml | wc -l | head --bytes=-1 2>/dev/null)" = "x0" ]
#then
#  rm -f /tmp/facts.xml
#fi
##
#if [ ! -e /tmp/facts.xml -o "x$(find /tmp -name facts.xml -mtime 1 2>/dev/null)" != "x" ]
#then
#  wget -O - --timeout=1 ${CHUCK_RSS} 2>/dev/null | sed -e 's_<title>_\n<title>_g' | sed -e 's_</title>_</title>\n_g' | grep -e "^<title>" | tail -${CHUCK_NB} | sed -e "s_&#039;_\'_g" > /tmp/facts.xml
#  sed -i -e "s_&#039;_\'_g" /tmp/facts.xml
#fi
##
#CHUCK_FACTS="$(cat /tmp/facts.xml | tail -$((${CHUCK_NB}-${CHUCK_RAND})) | head -1 | head --bytes=-9 | tail --bytes=+8)"
#if [ "x${CHUCK_FACTS}" = "x" ]
#then
#  CHUCK_FACTS=" "
#fi
#cowsay -f${COWSAY_DIR}/${COWFILE} "${CHUCK_FACTS}"
alias rm="rm --interactive"
